{"version":3,"sources":["components/Loader/index.jsx","redux/character/constants.jsx","service/ApiService.jsx","helpers/utils.jsx","service/character.jsx","redux/character/action.jsx","pages/Main/style.jsx","components/Filter/style.jsx","components/Filter/index.jsx","components/Status/style.jsx","components/Status/index.jsx","components/Character/style.jsx","service/episode.jsx","components/Modal/index.jsx","components/Character/index.jsx","pages/Main/index.jsx","App.js","redux/character/reducer.jsx","redux/index.jsx","index.js"],"names":["StyledLoader","styled","div","Loader","LOAD_ALL_CHARACTER_START","LOAD_ALL_CHARACTER_SUCCESS","LOAD_ALL_CHARACTER_ERROR","route","a","fetch","method","mode","response","json","dataServer","status","getAllCharacterService","url","API","get","data","getAllCharacter","dispatch","type","types","payload","StyledMainPage","StyledFilterBlock","StyledFilterName","StyledFilterStatus","StyledFilterSpecies","StyledFilterType","StyledFilterGender","Filter","form","useRef","useDispatch","Form","onSubmit","e","preventDefault","Object","fromEntries","FormData","current","entries","filteredData","filter","query","getOwnPropertyNames","map","key","index","join","handleSubmitForm","ref","Group","className","controlId","Label","Control","name","placeholder","Select","size","defaultValue","value","Button","variant","onClick","reset","StyledAliveIndicator","span","StyledDeadIndicator","StyledUnknownIndicator","StyledStatus","Status","statusPerson","species","IndicatorStatus","useMemo","StyledCharacterSection","section","StyledCharacterBlock","StyledPaginationBlock","StyledPaginationButton","button","StyledPaginationNextButton","i","StyledPaginationPrevButton","getEpisodeService","id","PopUp","props","character","useSelector","state","useState","dataSet","person","find","useEffect","undefined","episode","match","fetchEpisode","Modal","centered","Header","closeButton","Title","Body","src","image","alt","location","style","marginTop","origin","length","gender","color","Character","info","show","modalShow","setModalShow","item","Card","width","cursor","Img","Text","prev","next","onHide","Main","isLoading","App","initialState","page","rootReducer","combineReducers","action","results","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c74b0931.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLoader = styled.div`\n  border: 5px solid #f3f3f3;\n  border-top: 5px solid #2a2f31;\n  border-radius: 50%;\n  width: 100px;\n  height: 100px;\n  position: absolute;\n  top: 50%;\n  left: 45%;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\nexport const Loader = () => {\n  return <StyledLoader />;\n};\n","export const LOAD_ALL_CHARACTER_START = 'CHARACTER/LOAD_ALL_CHARACTER_START';\nexport const LOAD_ALL_CHARACTER_SUCCESS = 'CHARACTER/LOAD_ALL_CHARACTER_SUCCESS';\nexport const LOAD_ALL_CHARACTER_ERROR = 'CHARACTER/LOAD_ALL_CHARACTER_ERROR';\n","import { urlServer } from '../helpers/utils';\n\nclass API {\n  async get(route) {\n    try {\n      const response = await fetch(`${urlServer}/${route}`, {\n        method: 'GET',\n        mode: 'cors',\n      });\n      const dataServer = await response.json();\n      if (response.status >= 400) throw dataServer;\n      return dataServer;\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default new API();\n","export const urlServer = 'https://rickandmortyapi.com/api';\n","import API from './ApiService';\n\nexport const getAllCharacterService = async (url) => {\n  const data = await API.get(`character/${url}`);\n  return data;\n};\n","import * as types from './constants';\nimport { getAllCharacterService, getEpisodeService } from '../../service/character';\n\nexport const getAllCharacter = (url) => async (dispatch) => {\n  try {\n    dispatch({\n      type: types.LOAD_ALL_CHARACTER_START,\n    });\n    const data = await getAllCharacterService(url);\n    return dispatch({\n      type: types.LOAD_ALL_CHARACTER_SUCCESS,\n      payload: data,\n    });\n  } catch (e) {\n    return dispatch({\n      type: types.LOAD_ALL_CHARACTER_ERROR,\n      payload: e,\n    });\n  }\n};\n","import styled from 'styled-components';\n\nexport const StyledMainPage = styled.div`\ndisplay: flex;\nflex-direction: row;\nmargin-top: 20px;\n`\n","import styled from 'styled-components';\n\nexport const StyledFilterBlock = styled.div`\n  display: flex;\n  flex: 0 0 10vw;\n`\n\nexport const StyledFilterName = styled.div`\n`\nexport const StyledFilterStatus = styled.div`\n`\nexport const StyledFilterSpecies = styled.div`\n`\nexport const StyledFilterType = styled.div`\n`\nexport const StyledFilterGender = styled.div`\n`","import React, { useRef } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport {\n  StyledFilterBlock,\n  StyledFilterGender,\n  StyledFilterName,\n  StyledFilterSpecies,\n  StyledFilterStatus,\n  StyledFilterType,\n} from './style';\nimport { useDispatch } from 'react-redux';\nimport { getAllCharacter } from '../../redux/character/action';\n\nexport const Filter = () => {\n  const form = useRef(null);\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    const data = Object.fromEntries(new FormData(form.current).entries());\n    const filteredData = Object.fromEntries(Object.entries(data).filter(([_, v]) => v !== ''));\n    const getOwnPropertyNames = Object.getOwnPropertyNames(filteredData);\n    const query = getOwnPropertyNames\n      .map((key, index) => {\n        if (index === 0) return `?${key}=${filteredData[key]}`;\n        return `&${key}=${filteredData[key]}`;\n      })\n      .join('');\n    dispatch(getAllCharacter(query));\n  };\n  const handleResetButton = (e) => {\n    e.preventDefault();\n    form.current.reset();\n    dispatch(getAllCharacter('?page=1'));\n  };\n\n  return (\n    <StyledFilterBlock>\n      <Form onSubmit={(e) => handleSubmitForm(e)} ref={form}>\n        <StyledFilterName>\n          <Form.Group className='mb-3' controlId='form.FilterName'>\n            <Form.Label>Name filter</Form.Label>\n            <Form.Control type='text' name='name' placeholder='Enter name' />\n          </Form.Group>\n        </StyledFilterName>\n        <StyledFilterStatus>\n          <Form.Group className='mb-3' controlId='form.FilterStatus'>\n            <Form.Label>Status filter</Form.Label>\n            <Form.Select size='sm' name='status'>\n              <option defaultValue value=''>\n                All\n              </option>\n              <option value='alive'>Alive</option>\n              <option value='dead'>Dead</option>\n              <option value='unknown'>Unknown</option>\n            </Form.Select>\n          </Form.Group>\n        </StyledFilterStatus>\n        <StyledFilterSpecies>\n          <Form.Group className='mb-3' controlId='form.FilterSpecies'>\n            <Form.Label>Species filter</Form.Label>\n            <Form.Control type='text' name='species' placeholder='Enter species' />\n          </Form.Group>\n        </StyledFilterSpecies>\n        <StyledFilterType>\n          <Form.Group className='mb-3' controlId='form.FilterType'>\n            <Form.Label>Type filter</Form.Label>\n            <Form.Control type='text' name='type' placeholder='Enter type' />\n          </Form.Group>\n        </StyledFilterType>\n        <StyledFilterGender>\n          <Form.Group className='mb-3' controlId='form.FilterGender'>\n            <Form.Label>Gender filter</Form.Label>\n            <Form.Select size='sm' name='gender'>\n              <option defaultValue value=''>\n                All\n              </option>\n              <option value='female'>Female</option>\n              <option value='male'>Male</option>\n              <option value='genderless'>Genderless</option>\n              <option value='unknown'>Unknown</option>\n            </Form.Select>\n          </Form.Group>\n        </StyledFilterGender>\n        <Button type='submit' variant='success'>\n          Apply\n        </Button>\n        <Button type='button' variant='secondary' onClick={handleResetButton}>\n          Reset\n        </Button>\n      </Form>\n    </StyledFilterBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledAliveIndicator = styled.span`\n  height: 0.5rem;\n  width: 0.5rem;\n  margin-right: 0.375rem;\n  background: rgb(85, 204, 68);\n  border-radius: 50%;\n`;\nexport const StyledDeadIndicator = styled.span`\n  height: 0.5rem;\n  width: 0.5rem;\n  margin-right: 0.375rem;\n  background: rgb(214, 61, 46);\n  border-radius: 50%;\n`;\n\nexport const StyledUnknownIndicator = styled.span`\n  height: 0.5rem;\n  width: 0.5rem;\n  margin-right: 0.375rem;\n  background: rgb(158, 158, 158);\n  border-radius: 50%;\n`;\n\nexport const StyledStatus = styled.span`\n    display: flex;\n    align-items: center;\n    text-transform: capitalize;\n`","import React, { useMemo } from 'react';\nimport { StyledAliveIndicator, StyledDeadIndicator, StyledStatus, StyledUnknownIndicator } from './style';\n\nexport const Status = ({statusPerson,species}) => {\n  const IndicatorStatus = useMemo(() => {\n    switch (statusPerson) {\n      case 'Alive':\n        return StyledAliveIndicator\n      case 'Dead':\n        return StyledDeadIndicator\n      default:\n        return StyledUnknownIndicator\n    }\n  }, [statusPerson])\n  return (\n    <StyledStatus>\n      <IndicatorStatus/>{statusPerson} - {species}\n    </StyledStatus>\n  )\n}","import styled from 'styled-components';\n\nexport const StyledCharacterSection = styled.section`\nmargin-left: 10px;\n`\n\nexport const StyledCharacterBlock = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  row-gap: 10px;\n  column-gap: 10px;\n`;\n\nexport const StyledPaginationBlock = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    margin: 20px 0;\n`\n\nexport const StyledPaginationButton = styled.button`\n    border: none;\n    background-color: transparent;\n    font-size: 20px;\n    display: flex;\n    align-items: center;\n`\n\nexport const StyledPaginationNextButton = styled.i`\n    margin-left: 5px;\n    border: solid black;\n    border-width: 0 3px 3px 0;\n    display: inline-block;\n    padding: 3px;\n    transform: rotate(-45deg);\n    -webkit-transform: rotate(-45deg);\n`\nexport const StyledPaginationPrevButton = styled.i`\n    margin-right: 5px;\n    border: solid black;\n    border-width: 0 3px 3px 0;\n    display: inline-block;\n    padding: 3px;\n    transform: rotate(135deg);\n    -webkit-transform: rotate(135deg);\n`","import API from './ApiService';\n\nexport const getEpisodeService = async (id) => {\n  const data = await API.get(`episode/${id}`);\n  return data;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { getEpisodeService } from '../../service/episode';\nimport { Status } from '../Status';\n\nexport const PopUp = (props) => {\n  const { character } = useSelector((state) => state.character);\n  const [data, dataSet] = useState(null);\n  const person = character.find((character) => character.id === props.id);\n  useEffect(() => {\n    if (person === undefined) return;\n    dataSet(null);\n    const fetchEpisode = async () => {\n      const data = await getEpisodeService(person?.episode?.[0].match(/[^\\/]*$/)[0]);\n      dataSet(data);\n    };\n    return fetchEpisode();\n  }, [person]);\n\n  return (\n    <Modal {...props} size='lg' aria-labelledby='contained-modal-title-vcenter' centered>\n      <Modal.Header closeButton>\n        <Modal.Title id='contained-modal-title-vcenter'>{person?.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>\n          <Status statusPerson={person?.status} species={person?.species} />\n        </h4>\n        <img src={person?.image} alt='avatar' />\n        {person?.location && <h4 style={{ marginTop: '10px' }}>Localion: {person.location.name}</h4>}\n        {person?.origin && <h4 style={{ marginTop: '10px' }}>Origin: {person.origin.name}</h4>}\n        {!!person?.type.length && <h4 style={{ marginTop: '10px' }}>Type: {person.type}</h4>}\n        {person?.gender && <h4 style={{ marginTop: '10px' }}>Gender: {person.gender}</h4>}\n        {data && (\n          <h4 style={{ marginTop: '10px', color: 'green' }}>\n            First seen: {data.name}, Episode: {data.episode}\n          </h4>\n        )}\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Status } from '../Status';\nimport {\n  StyledCharacterBlock,\n  StyledCharacterSection,\n  StyledPaginationBlock,\n  StyledPaginationButton,\n  StyledPaginationNextButton,\n  StyledPaginationPrevButton,\n} from './style';\nimport { Card } from 'react-bootstrap';\nimport { getAllCharacter } from '../../redux/character/action';\nimport { PopUp } from '../Modal';\n\nexport const Character = () => {\n  const { character, info } = useSelector((state) => state.character);\n  const [modalShow, setModalShow] = useState({\n    id: '',\n    show: false,\n  });\n  const dispatch = useDispatch();\n\n  const handleNextButton = () => {\n    const next = info.next.match(/[^\\/]*$/);\n    dispatch(getAllCharacter(next));\n  };\n  const handlePrevButton = () => {\n    const prev = info.prev.match(/[^\\/]*$/);\n    dispatch(getAllCharacter(prev));\n  };\n\n  return (\n    <StyledCharacterSection>\n      <StyledCharacterBlock>\n        {!!character.length\n          ? character.map((item) => (\n              <Card\n                style={{ width: '18rem', cursor: 'pointer' }}\n                key={item.id}\n                onClick={() => setModalShow({ id: item.id, show: true })}\n              >\n                <Card.Img variant=\"top\" src={item.image} />\n                <Card.Body>\n                  <Card.Title>{item.name}</Card.Title>\n                  <Card.Text>\n                    <Status statusPerson={item.status} species={item.species} />\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            ))\n          : 'There is nothing here'}\n      </StyledCharacterBlock>\n      <StyledPaginationBlock>\n        {!!character.length && info.prev && (\n          <StyledPaginationButton onClick={handlePrevButton}>\n            <StyledPaginationPrevButton />\n            Prev\n          </StyledPaginationButton>\n        )}\n        {!!character.length && info.next && (\n          <StyledPaginationButton onClick={handleNextButton}>\n            Next <StyledPaginationNextButton />\n          </StyledPaginationButton>\n        )}\n      </StyledPaginationBlock>\n      <PopUp show={modalShow.show} id={modalShow.id} onHide={() => setModalShow({ ...modalShow, show: false })} />\n    </StyledCharacterSection>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from '../../components/Loader';\nimport { getAllCharacter } from '../../redux/character/action';\nimport {\n  StyledMainPage,\n} from './style';\nimport { Filter } from '../../components/Filter';\nimport { Character } from '../../components/Character';\n  \nexport const Main = () => {\n  const { isLoading } = useSelector((state) => state.character);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllCharacter('?page=1'));\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <StyledMainPage>\n          <Filter />\n          <Character />\n        </StyledMainPage>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Main } from './pages/Main';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import * as types from './constants';\n\nconst initialState = {\n  character: [],\n  info: {},\n  page: 1,\n  isLoading: true,\n};\nexport const characterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOAD_ALL_CHARACTER_START:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case types.LOAD_ALL_CHARACTER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        character: action.payload.results,\n        info: action.payload.info,\n      };\n    case types.LOAD_ALL_CHARACTER_ERROR:\n      return {\n        ...state,\n        isLoading:false,\n        character: [],\n      }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { characterReducer } from './character/reducer';\n\nexport const rootReducer = combineReducers({\n  character: characterReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { rootReducer } from './redux/index';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}